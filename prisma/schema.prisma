datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                String   @id @default(auto()) @map("_id") @db.ObjectId
    uid               String   @unique
    conversationIds   String[] @db.ObjectId
    friendIds         String[] @db.ObjectId
    displayName       String
    email             String   @unique
    photoUrl          String?
    bio               String?
    dob               String?
    createdAt         DateTime
    updatedAt         DateTime @updatedAt
    allowFromStranger Boolean?

  conversations         Conversation[]  @relation(fields: [conversationIds], references: [id])
}

model Relationship {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  friends               String[]        @db.ObjectId
  status                Int             @default(0)  // 0 : không có quan hệ, 1 là bạn bè, 2 đang yêu cầu 
  client                String          @db.ObjectId
  updatedAt             DateTime        @default(now())
  @@index(friends)
}

model Conversation {
    id             String    @id @default(auto()) @map("_id") @db.ObjectId
    participantIds String[]  @db.ObjectId
    userSeen       String[]  @db.ObjectId
    isGroup        Boolean   @default(false)
    groupName      String?
    groupImage     String?
    groupOwner     String?   @db.ObjectId
    message        Message[]
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt

    participants        User[]          @relation(fields: [participantIds], references: [id])
}

type Message {
    cuid        String      @default(cuid())
    userId      String      @db.ObjectId
    content     String
    typeMessage MessageType @default(TEXT)
    isRevoke    Boolean     @default(false)
    createdAt   DateTime    @default(now())
}

enum MessageType {
    TEXT
    IMAGE
    CALL
    FILE
    VIDEO
}
